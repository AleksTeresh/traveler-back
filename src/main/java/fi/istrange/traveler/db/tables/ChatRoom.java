/*
 * This file is generated by jOOQ.
*/
package fi.istrange.traveler.db.tables;


import fi.istrange.traveler.db.Keys;
import fi.istrange.traveler.db.Public;
import fi.istrange.traveler.db.tables.records.ChatRoomRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatRoom extends TableImpl<ChatRoomRecord> {

    private static final long serialVersionUID = -728536170;

    /**
     * The reference instance of <code>public.chat_room</code>
     */
    public static final ChatRoom CHAT_ROOM = new ChatRoom();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChatRoomRecord> getRecordType() {
        return ChatRoomRecord.class;
    }

    /**
     * The column <code>public.chat_room.id</code>.
     */
    public final TableField<ChatRoomRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.chat_room.active</code>.
     */
    public final TableField<ChatRoomRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.chat_room.creation_time</code>.
     */
    public final TableField<ChatRoomRecord, Date> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>public.chat_room</code> table reference
     */
    public ChatRoom() {
        this("chat_room", null);
    }

    /**
     * Create an aliased <code>public.chat_room</code> table reference
     */
    public ChatRoom(String alias) {
        this(alias, CHAT_ROOM);
    }

    private ChatRoom(String alias, Table<ChatRoomRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChatRoom(String alias, Table<ChatRoomRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChatRoomRecord> getPrimaryKey() {
        return Keys.CHAT_ROOM_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChatRoomRecord>> getKeys() {
        return Arrays.<UniqueKey<ChatRoomRecord>>asList(Keys.CHAT_ROOM_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatRoom as(String alias) {
        return new ChatRoom(alias, this);
    }

    /**
     * Rename this table
     */
    public ChatRoom rename(String name) {
        return new ChatRoom(name, null);
    }
}
