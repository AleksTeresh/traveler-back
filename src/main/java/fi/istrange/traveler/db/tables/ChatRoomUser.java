/*
 * This file is generated by jOOQ.
*/
package fi.istrange.traveler.db.tables;


import fi.istrange.traveler.db.Keys;
import fi.istrange.traveler.db.Public;
import fi.istrange.traveler.db.tables.records.ChatRoomUserRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatRoomUser extends TableImpl<ChatRoomUserRecord> {

    private static final long serialVersionUID = 347167676;

    /**
     * The reference instance of <code>public.chat_room_user</code>
     */
    public static final ChatRoomUser CHAT_ROOM_USER = new ChatRoomUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChatRoomUserRecord> getRecordType() {
        return ChatRoomUserRecord.class;
    }

    /**
     * The column <code>public.chat_room_user.chat_room_id</code>.
     */
    public final TableField<ChatRoomUserRecord, Long> CHAT_ROOM_ID = createField("chat_room_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.chat_room_user.username</code>.
     */
    public final TableField<ChatRoomUserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * Create a <code>public.chat_room_user</code> table reference
     */
    public ChatRoomUser() {
        this("chat_room_user", null);
    }

    /**
     * Create an aliased <code>public.chat_room_user</code> table reference
     */
    public ChatRoomUser(String alias) {
        this(alias, CHAT_ROOM_USER);
    }

    private ChatRoomUser(String alias, Table<ChatRoomUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChatRoomUser(String alias, Table<ChatRoomUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ChatRoomUserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ChatRoomUserRecord, ?>>asList(Keys.CHAT_ROOM_USER__CHAT_ROOM_USER_CHAT_ROOM_ID_FKEY, Keys.CHAT_ROOM_USER__CHAT_ROOM_USER_USERNAME_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatRoomUser as(String alias) {
        return new ChatRoomUser(alias, this);
    }

    /**
     * Rename this table
     */
    public ChatRoomUser rename(String name) {
        return new ChatRoomUser(name, null);
    }
}
